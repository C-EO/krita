From 0935e9f6d782bc878af0c7484033183c34fab0e4 Mon Sep 17 00:00:00 2001
From: "L. E. Segovia" <amy@amyspark.me>
Date: Wed, 21 Jul 2021 01:25:40 +0000
Subject: [PATCH 09/10] Respect settings location for hosted builds

---
 gmic-qt/CMakeLists.txt                            |  1 +
 gmic-qt/src/DialogSettings.cpp                    |  2 +-
 gmic-qt/src/FilterSelector/FiltersPresenter.cpp   |  2 +-
 gmic-qt/src/Globals.h                             | 10 ++++++++++
 gmic-qt/src/GmicQt.cpp                            |  2 +-
 gmic-qt/src/Host/KritaPlugin/gmicqttoolplugin.cpp |  3 ++-
 gmic-qt/src/Host/None/JpegQualityDialog.cpp       |  4 ++--
 gmic-qt/src/LanguageSettings.cpp                  |  2 +-
 gmic-qt/src/MainWindow.cpp                        |  8 ++++----
 9 files changed, 23 insertions(+), 11 deletions(-)

diff --git a/gmic-qt/CMakeLists.txt b/gmic-qt/CMakeLists.txt
index bb0d2e4..2e9a83d 100644
--- a/gmic-qt/CMakeLists.txt
+++ b/gmic-qt/CMakeLists.txt
@@ -648,6 +648,7 @@ elseif (${GMIC_QT_HOST} STREQUAL "krita-plugin")
     add_definitions(-D_GMIC_QT_DISABLE_THEMING_)
     add_definitions(-D_GMIC_QT_CONSENT_TO_UPDATE_FIRST_)
     add_definitions(-D_GMIC_QT_DISABLE_TRANSLATION_)
+    add_definitions(-D_GMIC_USE_HOSTED_SETTINGS_)
     add_library(krita_gmic_qt MODULE ${gmic_qt_SRCS} ${gmic_qt_QRC} ${qmic_qt_QM})
     target_include_directories(
       krita_gmic_qt
diff --git a/gmic-qt/src/DialogSettings.cpp b/gmic-qt/src/DialogSettings.cpp
index a12b170..46a6b5b 100644
--- a/gmic-qt/src/DialogSettings.cpp
+++ b/gmic-qt/src/DialogSettings.cpp
@@ -114,7 +114,7 @@ DialogSettings::DialogSettings(QWidget * parent) : QDialog(parent), ui(new Ui::D
 
   ui->rbLeftPreview->setChecked(_previewPosition == MainWindow::PreviewPosition::Left);
   ui->rbRightPreview->setChecked(_previewPosition == MainWindow::PreviewPosition::Right);
-  const bool savedDarkTheme = QSettings().value(DARK_THEME_KEY, GmicQtHost::DarkThemeIsDefault).toBool();
+  const bool savedDarkTheme = GMIC_SETTINGS.value(DARK_THEME_KEY, GmicQtHost::DarkThemeIsDefault).toBool();
   ui->rbDarkTheme->setChecked(savedDarkTheme);
   ui->rbDefaultTheme->setChecked(!savedDarkTheme);
 #ifdef _GMIC_QT_DISABLE_THEMING_
diff --git a/gmic-qt/src/FilterSelector/FiltersPresenter.cpp b/gmic-qt/src/FilterSelector/FiltersPresenter.cpp
index 7861049..6974020 100644
--- a/gmic-qt/src/FilterSelector/FiltersPresenter.cpp
+++ b/gmic-qt/src/FilterSelector/FiltersPresenter.cpp
@@ -395,7 +395,7 @@ void FiltersPresenter::expandFaveFolder()
 void FiltersPresenter::expandPreviousSessionExpandedFolders()
 {
   if (_filtersView) {
-    QList<QString> expandedFolderPaths = QSettings().value("Config/ExpandedFolders", QStringList()).toStringList();
+    QList<QString> expandedFolderPaths = GMIC_SETTINGS.value("Config/ExpandedFolders", QStringList()).toStringList();
     _filtersView->expandFolders(expandedFolderPaths);
   }
 }
diff --git a/gmic-qt/src/Globals.h b/gmic-qt/src/Globals.h
index 87ae6e8..7b60cdd 100644
--- a/gmic-qt/src/Globals.h
+++ b/gmic-qt/src/Globals.h
@@ -67,4 +67,14 @@ const char WarningPrefix = '!';
 #define KEYPOINTS_INTERACTIVE_MIDDLE_DELAY_MS ((KEYPOINTS_INTERACTIVE_LOWER_DELAY_MS + KEYPOINTS_INTERACTIVE_UPPER_DELAY_MS) / 2)
 #define KEYPOINTS_INTERACTIVE_AVERAGING_COUNT 6
 
+#ifdef _GMIC_USE_HOSTED_SETTINGS_
+#ifdef Q_OS_MACOS
+#define GMIC_SETTINGS QSettings(GMIC_QT_ORGANISATION_DOMAIN, GMIC_QT_APPLICATION_NAME)
+#else
+#define GMIC_SETTINGS QSettings(GMIC_QT_ORGANISATION_NAME, GMIC_QT_APPLICATION_NAME)
+#endif
+#else
+#define GMIC_SETTINGS QSettings()
+#endif
+
 #endif // GMIC_QT_GLOBALS_H
diff --git a/gmic-qt/src/GmicQt.cpp b/gmic-qt/src/GmicQt.cpp
index e836072..8f05586 100644
--- a/gmic-qt/src/GmicQt.cpp
+++ b/gmic-qt/src/GmicQt.cpp
@@ -197,7 +197,7 @@ int run(UserInterfaceMode interfaceMode,                   //
     LanguageSettings::installTranslators();
     MainWindow mainWindow;
     mainWindow.setPluginParameters(parameters);
-    if (QSettings().value("Config/MainWindowMaximized", false).toBool()) {
+    if (GMIC_SETTINGS.value("Config/MainWindowMaximized", false).toBool()) {
       mainWindow.showMaximized();
     } else {
       mainWindow.show();
diff --git a/gmic-qt/src/Host/KritaPlugin/gmicqttoolplugin.cpp b/gmic-qt/src/Host/KritaPlugin/gmicqttoolplugin.cpp
index ddcef22..79f11b7 100644
--- a/gmic-qt/src/Host/KritaPlugin/gmicqttoolplugin.cpp
+++ b/gmic-qt/src/Host/KritaPlugin/gmicqttoolplugin.cpp
@@ -39,6 +39,7 @@
 
 #include "DialogSettings.h"
 #include "GmicQt.h"
+#include "Globals.h"
 #include "HeadlessProcessor.h"
 #include "Host/GmicQtHost.h"
 #include "LanguageSettings.h"
@@ -153,7 +154,7 @@ int KritaGmicPlugin::launch(std::shared_ptr<KisImageInterface> i, bool headless)
     mainWindow->setWindowModality(Qt::ApplicationModal);
     mainWindow->setAttribute(Qt::WA_DeleteOnClose);
 
-    if (QSettings().value("Config/MainWindowMaximized", false).toBool()) {
+    if (GMIC_SETTINGS.value("Config/MainWindowMaximized", false).toBool()) {
       mainWindow->showMaximized();
     } else {
       mainWindow->show();
diff --git a/gmic-qt/src/Host/None/JpegQualityDialog.cpp b/gmic-qt/src/Host/None/JpegQualityDialog.cpp
index b351994..a395440 100644
--- a/gmic-qt/src/Host/None/JpegQualityDialog.cpp
+++ b/gmic-qt/src/Host/None/JpegQualityDialog.cpp
@@ -14,7 +14,7 @@ JpegQualityDialog::JpegQualityDialog(QWidget * parent) : QDialog(parent), ui(new
   ui->spinBox->setRange(0, 100);
 
   if (_selectedQuality == -1) {
-    _selectedQuality = QSettings().value(JPEG_QUALITY_KEY, 85).toInt();
+    _selectedQuality = GMIC_SETTINGS.value(JPEG_QUALITY_KEY, 85).toInt();
   }
 
   ui->slider->setValue(_selectedQuality);
@@ -24,7 +24,7 @@ JpegQualityDialog::JpegQualityDialog(QWidget * parent) : QDialog(parent), ui(new
   connect(ui->spinBox, QOverload<int>::of(&QSpinBox::valueChanged), ui->slider, &QSlider::setValue);
   connect(ui->pbOk, &QPushButton::clicked, [this]() {
     _selectedQuality = ui->spinBox->value();
-    QSettings().setValue(JPEG_QUALITY_KEY, _selectedQuality);
+    GMIC_SETTINGS.setValue(JPEG_QUALITY_KEY, _selectedQuality);
   });
   connect(ui->pbOk, &QPushButton::clicked, this, &QDialog::accept);
   connect(ui->pbCancel, &QPushButton::clicked, this, &QDialog::reject);
diff --git a/gmic-qt/src/LanguageSettings.cpp b/gmic-qt/src/LanguageSettings.cpp
index 8aae1d7..fc291c7 100644
--- a/gmic-qt/src/LanguageSettings.cpp
+++ b/gmic-qt/src/LanguageSettings.cpp
@@ -65,7 +65,7 @@ const QMap<QString, QString> & LanguageSettings::availableLanguages()
 QString LanguageSettings::configuredTranslator()
 {
 #ifndef _GMIC_QT_DISABLE_TRANSLATION_
-  QString code = QSettings().value("Config/LanguageCode", QString()).toString();
+  QString code = GMIC_SETTINGS.value("Config/LanguageCode", QString()).toString();
 #else
   QString code;
 #endif
diff --git a/gmic-qt/src/MainWindow.cpp b/gmic-qt/src/MainWindow.cpp
index 241b9a5..db67ea3 100644
--- a/gmic-qt/src/MainWindow.cpp
+++ b/gmic-qt/src/MainWindow.cpp
@@ -369,7 +369,7 @@ void MainWindow::buildFiltersTree()
     _filtersPresenter->importGmicGTKFaves();
     _filtersPresenter->saveFaves();
     _gtkFavesShouldBeImported = false;
-    QSettings().setValue(FAVES_IMPORT_KEY, true);
+    GMIC_SETTINGS.setValue(FAVES_IMPORT_KEY, true);
   }
 
   QString searchText = ui->searchField->text();
@@ -467,7 +467,7 @@ void MainWindow::onStartupFiltersUpdateFinished(int status)
   } else if (status == (int)Updater::UpdateStatus::NotNecessary) {
   }
 
-  if (QSettings().value(FAVES_IMPORT_KEY, false).toBool() || !FavesModelReader::gmicGTKFaveFileAvailable()) {
+  if (GMIC_SETTINGS.value(FAVES_IMPORT_KEY, false).toBool() || !FavesModelReader::gmicGTKFaveFileAvailable()) {
     _gtkFavesShouldBeImported = false;
   } else {
     _gtkFavesShouldBeImported = askUserForGTKFavesImport();
@@ -484,7 +484,7 @@ void MainWindow::onStartupFiltersUpdateFinished(int status)
   }
 
   // Retrieve and select previously selected filter
-  QString hash = QSettings().value("SelectedFilter", QString()).toString();
+  QString hash = GMIC_SETTINGS.value("SelectedFilter", QString()).toString();
   if (_newSession || !_lastExecutionOK) {
     hash.clear();
   }
@@ -1274,7 +1274,7 @@ bool MainWindow::askUserForGTKFavesImport()
   int choice = messageBox.exec();
   if (choice != QMessageBox::Yes) {
     if (cb->isChecked()) {
-      QSettings().setValue(FAVES_IMPORT_KEY, true);
+      GMIC_SETTINGS.setValue(FAVES_IMPORT_KEY, true);
     }
     return false;
   }
-- 
2.31.1.windows.1

